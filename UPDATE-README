#This file includes instructions and notices for admins that they should keep in mind when
#updating their core installations to a new version.
#WARNING: Backup your database regularly and before making any changes to it.

***v0.5:***
5ec0143: All usernames and email addresses in the database need to be lowercased.
    brave/core/scripts/case_migration.py should resolve this for you.
ad709e0: It is highly recommended that admins remove all characters whose owners no longer have a valid API key for them.
    brave/core/scripts/delete_orphan_characters.py should resolve this.
3016b8b: KeyID is made unique in the Credentials collection; all duplicate keys must be 
    purged from the database prior to upgrading. brave/core/scripts/fix_key_duplicates.py should resolve this for you.
    Removal of orphaned characters (see ad709e0) is now required.

***v0.5.2+***
6b3c4a5: Changes were made to the populate_calls function. Admins must run populate_calls(True) from paster shell after
    updating to this version. 
    Commands: 
        from brave.core.util.eve import populate_calls
        populate_calls(True)                    

***0.6.3***
8ac784f: The config value 'core.minimum_key_id' should be added to the production config file. Recommended
    value of 3283828
    
***DEVELOP***
feature/authenticated: The config value 'web.auth.intercept' should be added to the production config file with a value 
    of 401.

20b85a5: A new field was added to Applications, which will need to be set before attempting to run Core after the update.
    The field name is short, and it must be unique. This is used as the basis for that application's permissions, so
    pick a reasonable name such as 'jabber'. Must be lowercase.
    Commands:
        from brave.core.application.model import Application
        apps = Application.objects
        a = apps[0]
        print a.name
        a.short = ...
        a.save()
        ....

feature/permissions:
    Admins must run initialize permissions in the database.
    Commands:
        from brave.core.permission.controller import init_perms
        init_perms()

    Admins need to grant themselves the core.* permission in order to retain all previous
    abilities that they had. Admins are also encouraged to grant the necessary permissions to normal users as well.
    Commands:
        from brave.core.account.model import User
        from brave.core.permission.model import Permission
        admin_perm = Permission.objects(id='core.*').first()
        admins = User.objects(admin=True)
        for u in admins:
            c = u.primary
            c.personal_permissions.append(admin_perm)
            c.save()

feature/recommendedKeyMask: The config value 'core.recommended_key_mask' should be added to the production config file with
    a value equal to that which the admin wants to be recommended for users as the standard key.

feature/accountKeys: The config value 'core.recommended_key_kind' should be added to the production config file with
    a value of the kind of key the admin wants users to add ("Character", "Account", or "Corporation")

feature/configLoginHistory: The config value 'core.login_history_days' should be added to the production config file 
    with the number of days the admin wishes to retain login history (prior setting: 30)
    
feature/requireKeys: The config value 'core.require_recommended_key' should be added to the config to indicate whether
    the recommended key settings are required to authorize any application.

1b58513: Changes were made to the structure of external application permissions grants.
    brave/core/scripts/multiple_characters_grant_migration.py should migrate old grants to the new format.
    
feature/configPassReqs: The config value 'core.required_pass_strength' should be added to the config to the value of
    the zxcvbn score the admin wants to require of all passwords.

feature/user-agent: The config value 'core.operator' should be added to the config, with a string representing
    the name of the alliance (or other group) operating this particular instance of Core.
